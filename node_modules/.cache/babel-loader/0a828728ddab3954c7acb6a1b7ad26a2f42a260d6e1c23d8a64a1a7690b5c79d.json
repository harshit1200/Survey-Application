{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\newfolder\\\\reactfirst\\\\src\\\\components\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport questions from '../data/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Survey({\n  sessionId,\n  onComplete\n}) {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState({});\n\n  // Handle answer input\n  const handleAnswerChange = answer => {\n    const currentQuestionId = questions[currentQuestionIndex].id;\n    setResponses({\n      ...responses,\n      [currentQuestionId]: answer\n    });\n    localStorage.setItem(sessionId, JSON.stringify({\n      ...responses,\n      [currentQuestionId]: answer\n    }));\n  };\n\n  // Navigation functions\n  const goToNext = () => setCurrentQuestionIndex(prev => Math.min(prev + 1, questions.length - 1));\n  const goToPrev = () => setCurrentQuestionIndex(prev => Math.max(prev - 1, 0));\n\n  // Confirm submission at the last question\n  const handleSubmit = () => {\n    if (window.confirm(\"Are you sure you want to submit your answers?\")) {\n      localStorage.setItem(sessionId, JSON.stringify({\n        ...responses,\n        status: 'COMPLETED'\n      }));\n      onComplete();\n    }\n  };\n\n  // Current question\n  const question = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survey\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: question.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), question.type === 'rating' ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      max: question.scale,\n      value: responses[question.id] || '',\n      onChange: e => handleAnswerChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: responses[question.id] || '',\n      onChange: e => handleAnswerChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPrev,\n        disabled: currentQuestionIndex === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), currentQuestionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Survey, \"ynmIrkrXK6PWgBAfgZf9ADzgAi8=\");\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["useState","questions","jsxDEV","_jsxDEV","Survey","sessionId","onComplete","_s","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","handleAnswerChange","answer","currentQuestionId","id","localStorage","setItem","JSON","stringify","goToNext","prev","Math","min","length","goToPrev","max","handleSubmit","window","confirm","status","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","type","scale","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sharm/newfolder/reactfirst/src/components/Survey.js"],"sourcesContent":["import { useState } from 'react';\r\nimport questions from '../data/questions';\r\n\r\nfunction Survey({ sessionId, onComplete }) {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [responses, setResponses] = useState({});\r\n\r\n  // Handle answer input\r\n  const handleAnswerChange = (answer) => {\r\n    const currentQuestionId = questions[currentQuestionIndex].id;\r\n    setResponses({ ...responses, [currentQuestionId]: answer });\r\n    localStorage.setItem(sessionId, JSON.stringify({ ...responses, [currentQuestionId]: answer }));\r\n  };\r\n\r\n  // Navigation functions\r\n  const goToNext = () => setCurrentQuestionIndex((prev) => Math.min(prev + 1, questions.length - 1));\r\n  const goToPrev = () => setCurrentQuestionIndex((prev) => Math.max(prev - 1, 0));\r\n\r\n  // Confirm submission at the last question\r\n  const handleSubmit = () => {\r\n    if (window.confirm(\"Are you sure you want to submit your answers?\")) {\r\n      localStorage.setItem(sessionId, JSON.stringify({ ...responses, status: 'COMPLETED' }));\r\n      onComplete();\r\n    }\r\n  };\r\n\r\n  // Current question\r\n  const question = questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"survey\">\r\n      <h2>Question {currentQuestionIndex + 1} of {questions.length}</h2>\r\n      <p>{question.text}</p>\r\n\r\n      {question.type === 'rating' ? (\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max={question.scale}\r\n          value={responses[question.id] || ''}\r\n          onChange={(e) => handleAnswerChange(e.target.value)}\r\n        />\r\n      ) : (\r\n        <textarea\r\n          value={responses[question.id] || ''}\r\n          onChange={(e) => handleAnswerChange(e.target.value)}\r\n        />\r\n      )}\r\n\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={goToPrev} disabled={currentQuestionIndex === 0}>Previous</button>\r\n        {currentQuestionIndex < questions.length - 1 ? (\r\n          <button onClick={goToNext}>Next</button>\r\n        ) : (\r\n          <button onClick={handleSubmit}>Submit</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Survey;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}